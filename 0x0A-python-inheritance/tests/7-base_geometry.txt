===============================
Test file for 7-base_geometry module
===============================


This module contains the BaseGeometry class and the methods
integer_validator() and area()


it import BaseGeometry class and, integer_validator() and area() methods:
::
    >>> BaseGeometry = __import__("7-base_geometry").BaseGeometry
    >>> area = __import__("7-base_geometry").BaseGeometry.area
    >>> integer_validator = __import__("7-base_geometry").BaseGeometry.integer_validator

it check for area() method:
::
    >>> bg = BaseGeometry()
    >>> print(bg.area())
    Traceback (most recent call last):
        ...
    Exception: area() is not implemented

it check for integer_validator method {value of type int}:
::
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("my_int", 12)

it check for integer_validator method {value of type non-int}:
::
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("my_int", "one")
    Traceback (most recent call last):
        ...
    TypeError: the my_int must be an integer

Check for integer_validator method (value of <= 0):
::
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("my_int", 0)
    Traceback (most recent call last):
        ...
    ValueError: my_int must be greater than 0
    >>> bg.integer_validator("number", -1)
    Traceback (most recent call last):
        ...
    ValueError: the number must be greater than 0
